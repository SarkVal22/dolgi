import logging
import nest_asyncio
from telegram import Update
from telegram.ext import Application, CommandHandler, CallbackContext
import gspread
from oauth2client.service_account import ServiceAccountCredentials

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ nest_asyncio –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å —Ü–∏–∫–ª–æ–º —Å–æ–±—ã—Ç–∏–π
nest_asyncio.apply()

# –í—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à —Ç–æ–∫–µ–Ω –∑–¥–µ—Å—å
TELEGRAM_TOKEN = '7260269582:AAG2uGIJiU7wQ8nIGcwF5qFdXVx_NfunShI'
SPREADSHEET_ID = '1tVwumW6Yj5DoPVd5GvV2TLU0T_yuRCf523uvwUXqYcw'

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Google Sheets
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
credentials = ServiceAccountCredentials.from_json_keyfile_name("credentials.json", scope)
client = gspread.authorize(credentials)
sheet = client.open_by_key(SPREADSHEET_ID).sheet1

# –°–ª–æ–≤–∞—Ä—å —Å –∏–º–µ–Ω–∞–º–∏ –∏ user_id
user_ids = {
    '–ê—Ä—Å–µ–Ω': '@AKukhmazov',
    '–ê–Ω–¥—Ä–µ–π –ñ': '@zhandnab',
    '–ê–Ω–¥—Ä–µ–π –ê': '@Alenin_Andrey',
    '–í–∞–ª–µ—Ä–∞ –ë': '@valerkas',
    '–í–∞–ª–µ—Ä–∞ –°': '@ValeriySark',
    '–ó–µ–≤—Å': '@Zeus7717',
    '–ú–∞—Ä–∞—Ç': '@Marat1k77',
    '–î–∞–Ω–∑–∞–Ω': '@gunndanz',
    '–ê–Ω–¥—Ä–µ–π –°': '@Premove',
    '–ï–≤–≥–µ–Ω–∏–π –ê': '@abram88',
    '–ï–≤–≥–µ–Ω–∏–π –ú': '@Hate_m11',
    '–ú–∏—Ö–∞–∏–ª –ë': '@pryanni',
    '–ö–æ—Å—Ç—è': '@hlopkost',
    '–ê—Ä—Ç–µ–º –ì': '@Artem_Galaktionov22',
    '–ë–æ—Ä–∏—Å': '@Pimienti',
    '–ö–∏—Ä–∏–ª–ª': '@Batko2003',
    '–ï–≥–æ—Ä': '@yagr55',
    '–í–ª–∞–¥': '@blvvld',
    '–ú–∞—Ä–∏—è': '@thaidancer',
    '–°—Ç–∞—Å': '@s4fbrc4',
    '–ò–º—è1': '@user_id1',
    '–ò–º—è2': '@user_id2',
    # –î–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–≥–∏–µ –∏–º–µ–Ω–∞ –∏ –∏—Ö user_id
}

async def start(update: Update, context: CallbackContext) -> None:
    await update.message.reply_text('–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å /dolgi, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–¥–æ–ª–∂–Ω–∏–∫–æ–≤.')

async def get_debts(update: Update, context: CallbackContext) -> None:
    debts = sheet.row_values(560)  # –ò–º–µ–Ω–∞ (—Å—Ç—Ä–æ–∫–∞ 560)
    amounts = sheet.row_values(562)  # –î–æ–ª–≥–∏ (—Å—Ç—Ä–æ–∫–∞ 562)

    message = "–î–û–õ–ì–ò ü§°\n\n"
    for name, amount in zip(debts, amounts):
        if name == "–ü—Ä–æ–≤–µ—Ä–∫–∞":
            continue
        try:
            amount = int(amount.replace('\xa0', ''))  # –£–¥–∞–ª–∏—Ç—å –Ω–µ—Ä–∞–∑—Ä—ã–≤–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã –∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –≤ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ
            if amount < 0:
                if name in user_ids:
                    name = user_ids[name]  # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å user_id –≤–º–µ—Å—Ç–æ –∏–º–µ–Ω–∏
                message += f"{name} - {-amount}\n"
        except ValueError:
            # –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º, –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –µ–≥–æ
            continue

    if message == "–î–û–õ–ì–ò ü§°\n\n":
        message = "–ù–µ—Ç –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–µ–π."

    await update.message.reply_text(message, parse_mode='HTML')

def main() -> None:
    application = Application.builder().token(TELEGRAM_TOKEN).build()
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("dolgi", get_debts))

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    application.run_polling()

if __name__ == '__main__':
    main()